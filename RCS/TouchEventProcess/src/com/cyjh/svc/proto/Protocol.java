// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: touch_event.proto

package com.cyjh.svc.proto;

public final class Protocol {
  private Protocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code TouchEvent.ActionType}
   */
  public enum ActionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TOUCH_DOWN = 1;</code>
     */
    TOUCH_DOWN(0, 1),
    /**
     * <code>TOUCH_UP = 2;</code>
     */
    TOUCH_UP(1, 2),
    /**
     * <code>TOUCH_MOVE = 3;</code>
     */
    TOUCH_MOVE(2, 3),
    ;

    /**
     * <code>TOUCH_DOWN = 1;</code>
     */
    public static final int TOUCH_DOWN_VALUE = 1;
    /**
     * <code>TOUCH_UP = 2;</code>
     */
    public static final int TOUCH_UP_VALUE = 2;
    /**
     * <code>TOUCH_MOVE = 3;</code>
     */
    public static final int TOUCH_MOVE_VALUE = 3;


    public final int getNumber() { return value; }

    public static ActionType valueOf(int value) {
      switch (value) {
        case 1: return TOUCH_DOWN;
        case 2: return TOUCH_UP;
        case 3: return TOUCH_MOVE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ActionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ActionType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ActionType>() {
            public ActionType findValueByNumber(int number) {
              return ActionType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.cyjh.svc.proto.Protocol.getDescriptor().getEnumTypes().get(0);
    }

    private static final ActionType[] VALUES = values();

    public static ActionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ActionType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:TouchEvent.ActionType)
  }

  public interface MessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .TouchEvent.ActionType actionType = 1;
    /**
     * <code>optional .TouchEvent.ActionType actionType = 1;</code>
     *
     * <pre>
     * 执行触控事件的类型
     * </pre>
     */
    boolean hasActionType();
    /**
     * <code>optional .TouchEvent.ActionType actionType = 1;</code>
     *
     * <pre>
     * 执行触控事件的类型
     * </pre>
     */
    com.cyjh.svc.proto.Protocol.ActionType getActionType();

    // optional int32 id = 2;
    /**
     * <code>optional int32 id = 2;</code>
     *
     * <pre>
     * 触点ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 2;</code>
     *
     * <pre>
     * 触点ID
     * </pre>
     */
    int getId();

    // optional int32 x = 3;
    /**
     * <code>optional int32 x = 3;</code>
     *
     * <pre>
     * 触点坐标x
     * </pre>
     */
    boolean hasX();
    /**
     * <code>optional int32 x = 3;</code>
     *
     * <pre>
     * 触点坐标x
     * </pre>
     */
    int getX();

    // optional int32 y = 4;
    /**
     * <code>optional int32 y = 4;</code>
     *
     * <pre>
     * 触点坐标y
     * </pre>
     */
    boolean hasY();
    /**
     * <code>optional int32 y = 4;</code>
     *
     * <pre>
     * 触点坐标y
     * </pre>
     */
    int getY();

    // optional int32 delayTime = 5;
    /**
     * <code>optional int32 delayTime = 5;</code>
     *
     * <pre>
     * 滑动时在该点停留的时间
     * </pre>
     */
    boolean hasDelayTime();
    /**
     * <code>optional int32 delayTime = 5;</code>
     *
     * <pre>
     * 滑动时在该点停留的时间
     * </pre>
     */
    int getDelayTime();
  }
  /**
   * Protobuf type {@code TouchEvent.Message}
   */
  public static final class Message extends
      com.google.protobuf.GeneratedMessage
      implements MessageOrBuilder {
    // Use Message.newBuilder() to construct.
    private Message(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Message(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Message defaultInstance;
    public static Message getDefaultInstance() {
      return defaultInstance;
    }

    public Message getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Message(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.cyjh.svc.proto.Protocol.ActionType value = com.cyjh.svc.proto.Protocol.ActionType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                actionType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              id_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              x_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              y_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              delayTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cyjh.svc.proto.Protocol.internal_static_TouchEvent_Message_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cyjh.svc.proto.Protocol.internal_static_TouchEvent_Message_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cyjh.svc.proto.Protocol.Message.class, com.cyjh.svc.proto.Protocol.Message.Builder.class);
    }

    public static com.google.protobuf.Parser<Message> PARSER =
        new com.google.protobuf.AbstractParser<Message>() {
      public Message parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Message(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Message> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .TouchEvent.ActionType actionType = 1;
    public static final int ACTIONTYPE_FIELD_NUMBER = 1;
    private com.cyjh.svc.proto.Protocol.ActionType actionType_;
    /**
     * <code>optional .TouchEvent.ActionType actionType = 1;</code>
     *
     * <pre>
     * 执行触控事件的类型
     * </pre>
     */
    public boolean hasActionType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .TouchEvent.ActionType actionType = 1;</code>
     *
     * <pre>
     * 执行触控事件的类型
     * </pre>
     */
    public com.cyjh.svc.proto.Protocol.ActionType getActionType() {
      return actionType_;
    }

    // optional int32 id = 2;
    public static final int ID_FIELD_NUMBER = 2;
    private int id_;
    /**
     * <code>optional int32 id = 2;</code>
     *
     * <pre>
     * 触点ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 id = 2;</code>
     *
     * <pre>
     * 触点ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // optional int32 x = 3;
    public static final int X_FIELD_NUMBER = 3;
    private int x_;
    /**
     * <code>optional int32 x = 3;</code>
     *
     * <pre>
     * 触点坐标x
     * </pre>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 x = 3;</code>
     *
     * <pre>
     * 触点坐标x
     * </pre>
     */
    public int getX() {
      return x_;
    }

    // optional int32 y = 4;
    public static final int Y_FIELD_NUMBER = 4;
    private int y_;
    /**
     * <code>optional int32 y = 4;</code>
     *
     * <pre>
     * 触点坐标y
     * </pre>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 y = 4;</code>
     *
     * <pre>
     * 触点坐标y
     * </pre>
     */
    public int getY() {
      return y_;
    }

    // optional int32 delayTime = 5;
    public static final int DELAYTIME_FIELD_NUMBER = 5;
    private int delayTime_;
    /**
     * <code>optional int32 delayTime = 5;</code>
     *
     * <pre>
     * 滑动时在该点停留的时间
     * </pre>
     */
    public boolean hasDelayTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 delayTime = 5;</code>
     *
     * <pre>
     * 滑动时在该点停留的时间
     * </pre>
     */
    public int getDelayTime() {
      return delayTime_;
    }

    private void initFields() {
      actionType_ = com.cyjh.svc.proto.Protocol.ActionType.TOUCH_DOWN;
      id_ = 0;
      x_ = 0;
      y_ = 0;
      delayTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, actionType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, x_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, y_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, delayTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, actionType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, x_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, y_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, delayTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cyjh.svc.proto.Protocol.Message parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cyjh.svc.proto.Protocol.Message parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cyjh.svc.proto.Protocol.Message parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cyjh.svc.proto.Protocol.Message parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cyjh.svc.proto.Protocol.Message parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cyjh.svc.proto.Protocol.Message parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cyjh.svc.proto.Protocol.Message parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cyjh.svc.proto.Protocol.Message parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cyjh.svc.proto.Protocol.Message parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cyjh.svc.proto.Protocol.Message parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cyjh.svc.proto.Protocol.Message prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TouchEvent.Message}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cyjh.svc.proto.Protocol.MessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cyjh.svc.proto.Protocol.internal_static_TouchEvent_Message_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cyjh.svc.proto.Protocol.internal_static_TouchEvent_Message_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cyjh.svc.proto.Protocol.Message.class, com.cyjh.svc.proto.Protocol.Message.Builder.class);
      }

      // Construct using com.cyjh.svc.proto.Protocol.Message.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        actionType_ = com.cyjh.svc.proto.Protocol.ActionType.TOUCH_DOWN;
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        delayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cyjh.svc.proto.Protocol.internal_static_TouchEvent_Message_descriptor;
      }

      public com.cyjh.svc.proto.Protocol.Message getDefaultInstanceForType() {
        return com.cyjh.svc.proto.Protocol.Message.getDefaultInstance();
      }

      public com.cyjh.svc.proto.Protocol.Message build() {
        com.cyjh.svc.proto.Protocol.Message result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cyjh.svc.proto.Protocol.Message buildPartial() {
        com.cyjh.svc.proto.Protocol.Message result = new com.cyjh.svc.proto.Protocol.Message(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.actionType_ = actionType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.delayTime_ = delayTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cyjh.svc.proto.Protocol.Message) {
          return mergeFrom((com.cyjh.svc.proto.Protocol.Message)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cyjh.svc.proto.Protocol.Message other) {
        if (other == com.cyjh.svc.proto.Protocol.Message.getDefaultInstance()) return this;
        if (other.hasActionType()) {
          setActionType(other.getActionType());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasDelayTime()) {
          setDelayTime(other.getDelayTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cyjh.svc.proto.Protocol.Message parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cyjh.svc.proto.Protocol.Message) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .TouchEvent.ActionType actionType = 1;
      private com.cyjh.svc.proto.Protocol.ActionType actionType_ = com.cyjh.svc.proto.Protocol.ActionType.TOUCH_DOWN;
      /**
       * <code>optional .TouchEvent.ActionType actionType = 1;</code>
       *
       * <pre>
       * 执行触控事件的类型
       * </pre>
       */
      public boolean hasActionType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .TouchEvent.ActionType actionType = 1;</code>
       *
       * <pre>
       * 执行触控事件的类型
       * </pre>
       */
      public com.cyjh.svc.proto.Protocol.ActionType getActionType() {
        return actionType_;
      }
      /**
       * <code>optional .TouchEvent.ActionType actionType = 1;</code>
       *
       * <pre>
       * 执行触控事件的类型
       * </pre>
       */
      public Builder setActionType(com.cyjh.svc.proto.Protocol.ActionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        actionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .TouchEvent.ActionType actionType = 1;</code>
       *
       * <pre>
       * 执行触控事件的类型
       * </pre>
       */
      public Builder clearActionType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        actionType_ = com.cyjh.svc.proto.Protocol.ActionType.TOUCH_DOWN;
        onChanged();
        return this;
      }

      // optional int32 id = 2;
      private int id_ ;
      /**
       * <code>optional int32 id = 2;</code>
       *
       * <pre>
       * 触点ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 id = 2;</code>
       *
       * <pre>
       * 触点ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 2;</code>
       *
       * <pre>
       * 触点ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 2;</code>
       *
       * <pre>
       * 触点ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional int32 x = 3;
      private int x_ ;
      /**
       * <code>optional int32 x = 3;</code>
       *
       * <pre>
       * 触点坐标x
       * </pre>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 x = 3;</code>
       *
       * <pre>
       * 触点坐标x
       * </pre>
       */
      public int getX() {
        return x_;
      }
      /**
       * <code>optional int32 x = 3;</code>
       *
       * <pre>
       * 触点坐标x
       * </pre>
       */
      public Builder setX(int value) {
        bitField0_ |= 0x00000004;
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 x = 3;</code>
       *
       * <pre>
       * 触点坐标x
       * </pre>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000004);
        x_ = 0;
        onChanged();
        return this;
      }

      // optional int32 y = 4;
      private int y_ ;
      /**
       * <code>optional int32 y = 4;</code>
       *
       * <pre>
       * 触点坐标y
       * </pre>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 y = 4;</code>
       *
       * <pre>
       * 触点坐标y
       * </pre>
       */
      public int getY() {
        return y_;
      }
      /**
       * <code>optional int32 y = 4;</code>
       *
       * <pre>
       * 触点坐标y
       * </pre>
       */
      public Builder setY(int value) {
        bitField0_ |= 0x00000008;
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 y = 4;</code>
       *
       * <pre>
       * 触点坐标y
       * </pre>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000008);
        y_ = 0;
        onChanged();
        return this;
      }

      // optional int32 delayTime = 5;
      private int delayTime_ ;
      /**
       * <code>optional int32 delayTime = 5;</code>
       *
       * <pre>
       * 滑动时在该点停留的时间
       * </pre>
       */
      public boolean hasDelayTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 delayTime = 5;</code>
       *
       * <pre>
       * 滑动时在该点停留的时间
       * </pre>
       */
      public int getDelayTime() {
        return delayTime_;
      }
      /**
       * <code>optional int32 delayTime = 5;</code>
       *
       * <pre>
       * 滑动时在该点停留的时间
       * </pre>
       */
      public Builder setDelayTime(int value) {
        bitField0_ |= 0x00000010;
        delayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 delayTime = 5;</code>
       *
       * <pre>
       * 滑动时在该点停留的时间
       * </pre>
       */
      public Builder clearDelayTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        delayTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TouchEvent.Message)
    }

    static {
      defaultInstance = new Message(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:TouchEvent.Message)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TouchEvent_Message_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TouchEvent_Message_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021touch_event.proto\022\nTouchEvent\"j\n\007Messa" +
      "ge\022*\n\nactionType\030\001 \001(\0162\026.TouchEvent.Acti" +
      "onType\022\n\n\002id\030\002 \001(\005\022\t\n\001x\030\003 \001(\005\022\t\n\001y\030\004 \001(\005" +
      "\022\021\n\tdelayTime\030\005 \001(\005*:\n\nActionType\022\016\n\nTOU" +
      "CH_DOWN\020\001\022\014\n\010TOUCH_UP\020\002\022\016\n\nTOUCH_MOVE\020\003B" +
      "\036\n\022com.cyjh.svc.protoB\010Protocol"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_TouchEvent_Message_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_TouchEvent_Message_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TouchEvent_Message_descriptor,
              new java.lang.String[] { "ActionType", "Id", "X", "Y", "DelayTime", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
